services:
  - type: web # Backend (Flask)
    name: my-dashboard-backend
    env: python
    plan: free
    rootDirectory: backend # <<< 이 줄을 추가하거나 확인하세요.
    buildCommand: "./build_backend.sh"
    startCommand: "gunicorn run:app"
    # ... (나머지 백엔드 서비스 설정)
    healthCheckPath: "/" # Add a basic health check route in Flask if needed
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: my-dashboard-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: OPENWEATHER_API_KEY
        sync: false # Set this manually in Render's UI
      - key: PYTHON_VERSION
        value: 3.10.4 # Specify your Python version
      - key: FLASK_APP
        value: run.py
      - key: FLASK_ENV # Set to production for deployed app
        value: production
    autoDeploy: true
    buildFilter:
      paths:
        - backend/**

  - type: web # Frontend (React) - can be Static Site if build output is purely static
    name: my-dashboard-frontend
    plan: free
    env: node # or static if using static site type
    region: oregon # Or your preferred region
    buildCommand: "cd frontend && npm install && npm run build"
    # If using Static Site type on Render:
    # staticPublishPath: "./frontend/dist"
    # If using Web Service type for frontend (e.g. for SSR or complex routing):
    startCommand: "cd frontend && npx serve -s dist -p $PORT" # Example using 'serve'
    envVars:
      - key: VITE_API_URL # Ensure your React app uses this for backend URL
        value: https://${MY_DASHBOARD_BACKEND_RENDER_EXTERNAL_URL} # Render provides this automatically
        # Or use the backend service's internal URL if preferred: http://my-dashboard-backend:5000
    autoDeploy: true
    buildFilter:
      paths:
        - frontend/**
    routes:
      - type: rewrite
        source: /*
        destination: /index.html # For SPA routing with React Router

databases:
  - name: my-dashboard-db
    plan: free
    databaseName: mydashboarddb # Choose a name
    user: mydashboarduser # Choose a user
    region: oregon
    ipAllowList: [] # Allow all IPs, or configure as needed
